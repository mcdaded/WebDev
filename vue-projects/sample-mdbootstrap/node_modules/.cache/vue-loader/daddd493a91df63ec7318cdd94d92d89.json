{"remainingRequest":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/mdbvue/src/components/DatatableSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/mdbvue/src/components/DatatableSelect.vue","mtime":1554981614190},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1551962124017},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/babel-loader/lib/index.js","mtime":1551961971613},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1551962124017},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/vue-loader/lib/index.js","mtime":1554981529337}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nconst DatatableSelect = {\r\n  name: \"DatatableSelect\",\r\n  props: {\r\n    options: {\r\n      type: Array\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      entries: this.options[0]\r\n    };\r\n  },\r\n  watch: {\r\n    entries() {\r\n      this.$emit('getValue', this.entries);\r\n    }\r\n  }\r\n};\r\n\r\nexport default DatatableSelect;\r\n",{"version":3,"sources":["DatatableSelect.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"DatatableSelect.vue","sourceRoot":"node_modules/mdbvue/src/components","sourcesContent":["<template>\r\n  <div class=\"dataTables_length bs-select\">\r\n    <label>\r\n      Show entries\r\n    </label>\r\n    <select v-model=\"entries\" class=\"custom-select custom-select-sm form-control form-control-sm\"><option v-for=\"option in options\" :key=\"option\">{{option}}</option></select> \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst DatatableSelect = {\r\n  name: \"DatatableSelect\",\r\n  props: {\r\n    options: {\r\n      type: Array\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      entries: this.options[0]\r\n    };\r\n  },\r\n  watch: {\r\n    entries() {\r\n      this.$emit('getValue', this.entries);\r\n    }\r\n  }\r\n};\r\n\r\nexport default DatatableSelect;\r\n</script>"]}]}