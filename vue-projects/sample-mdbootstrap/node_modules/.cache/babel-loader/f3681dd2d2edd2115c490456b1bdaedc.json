{"remainingRequest":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/babel-loader/lib/index.js!/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/mdbvue/src/components/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/mdbvue/src/components/Input.vue","mtime":1554981614190},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1551962124017},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/babel-loader/lib/index.js","mtime":1551961971613},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/cache-loader/dist/cjs.js","mtime":1551962124017},{"path":"/mnt/d/github/webdev/vue-projects/sample-mdbootstrap/node_modules/vue-loader/lib/index.js","mtime":1554981529337}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport classNames from 'classnames';\nimport waves from '../mixins/waves';\nvar Input = {\n  props: {\n    basic: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      type: String,\n      default: \"input\"\n    },\n    type: {\n      type: String,\n      default: \"text\"\n    },\n    id: {\n      type: String\n    },\n    label: {\n      type: String\n    },\n    filled: {\n      type: Boolean\n    },\n    icon: {\n      type: String\n    },\n    placeholder: {\n      type: String\n    },\n    size: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    navInput: {\n      type: Boolean,\n      default: false\n    },\n    gap: {\n      type: Boolean,\n      default: false\n    },\n    waves: {\n      type: Boolean,\n      default: false\n    },\n    wavesFixed: {\n      type: Boolean,\n      default: false\n    },\n    value: {\n      type: [String, Number],\n      default: ''\n    },\n    labelColor: {\n      type: String\n    },\n    iconClass: {\n      type: String\n    },\n    inline: {\n      type: Boolean\n    },\n    successMsg: {\n      type: String\n    },\n    errorMsg: {\n      type: String\n    },\n    valid: {\n      type: Boolean\n    },\n    invalid: {\n      type: Boolean\n    },\n    active: {\n      type: Boolean,\n      default: false\n    },\n    labelClass: {\n      type: [Array, String]\n    },\n    far: {\n      type: Boolean,\n      default: false\n    },\n    regular: {\n      type: Boolean,\n      default: false\n    },\n    fal: {\n      type: Boolean,\n      default: false\n    },\n    light: {\n      type: Boolean,\n      default: false\n    },\n    fab: {\n      type: Boolean,\n      default: false\n    },\n    brands: {\n      type: Boolean,\n      default: false\n    },\n    rows: {\n      type: Number\n    },\n    wrapperClass: {\n      type: [String, Array]\n    },\n    noWrapper: {\n      type: Boolean,\n      value: false\n    },\n    ariaLabel: {\n      type: String\n    },\n    ariaDescribedBy: {\n      type: String\n    },\n    ariaLabelledBy: {\n      type: String\n    },\n    prependSlotID: {\n      type: String\n    },\n    appendSlotID: {\n      type: String\n    },\n    inputClass: {\n      type: String\n    },\n    maxlength: {\n      type: [String, Number]\n    },\n    outline: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      innerValue: this.value,\n      innerRadio: '',\n      isTouched: this.active,\n      innerChecked: this.checked\n    };\n  },\n  mounted: function mounted() {\n    if (this.type === \"checkbox\") {\n      this.$emit('getDefaultValue', this.innerChecked);\n    } else if (this.type === \"radio\") {\n      if (this.checked) {\n        this.$emit('getDefaultValue', this.innerValue);\n      }\n    } else {\n      this.$emit('getDefaultValue', this.innerValue);\n    }\n  },\n  computed: {\n    inputClasses: function inputClasses() {\n      return classNames('form-control', {\n        'validate valid': this.valid,\n        'validate invalid': this.invalid,\n        'filled-in': this.filled,\n        'with-gap': this.gap\n      }, this.type === 'checkbox' ? this.gap ? false : 'form-check-input' : false, this.type === 'radio' ? 'form-check-input' : false, this.type === 'textarea' && !this.basic ? 'md-textarea' : false, this.inputClass && this.inputClass);\n    },\n    wrapperClasses: function wrapperClasses() {\n      return classNames((this.type === 'checkbox' || this.type === 'radio') && this.inline ? 'form-check' : this.type === 'checkbox' || this.type === 'radio' ? 'form-check my-3' : false, this.basic ? false : 'md-form', this.outline && 'md-outline', this.waves && 'ripple-parent', this.doesItGetTheGroupClass && this.size ? \"input-group input-group-\".concat(this.size) : this.doesItGetTheGroupClass && !this.size ? 'input-group' : !this.doesItGetTheGroupClass && this.size ? \"form-\".concat(this.size) : false, this.wrapperClass);\n    },\n    iconClasses: function iconClasses() {\n      return classNames(this.far || this.regular ? 'far' : this.fal || this.light ? 'fal' : this.fab || this.brands ? 'fab' : 'fas', 'prefix fa-' + this.icon, this.isTouched && 'active', this.iconClass);\n    },\n    labelClasses: function labelClasses() {\n      return classNames({\n        'active': (this.placeholder || this.isTouched || this.innerValue !== '') && this.type !== 'checkbox',\n        'disabled': this.disabled,\n        'form-check-label': this.type === 'checkbox' || this.type === 'radio',\n        'mr-5': !this.isThisCheckboxLabeless\n      }, this.labelColor && 'text-' + this.labelColor, this.labelClass);\n    },\n    // tagname helper\n    whatTagIsThis: function whatTagIsThis() {\n      if (this.type === 'textarea') {\n        return 'textarea';\n      }\n\n      return this.tag;\n    },\n    // classname helper\n    doesItGetTheGroupClass: function doesItGetTheGroupClass() {\n      return this.$slots.prepend || this.$slots.append || this.basic && this.type === 'textarea';\n    },\n    // checkbox with no label (say, has to fit vertically & horizontally) helper\n    isThisCheckboxLabeless: function isThisCheckboxLabeless() {\n      return this.type === 'checkbox' && typeof this.label === \"undefined\";\n    }\n  },\n  methods: {\n    focus: function focus(e) {\n      this.isTouched = true;\n\n      if (!this.disabled) {\n        this.$refs.input.focus();\n      } // styles for navbar input\n\n\n      if (this.navInput) {\n        this.$el.firstElementChild.style.borderColor = \"transparent\";\n        this.$el.firstElementChild.style.boxShadow = \"none\";\n      }\n    },\n    blur: function blur(e) {\n      this.isTouched = false; // styles for navbar input\n\n      if (this.navInput) {\n        this.$el.firstElementChild.style.borderColor = \"#fff\";\n      }\n    },\n    onChange: function onChange(e) {\n      if (this.type === \"checkbox\") {\n        this.$emit('change', e.target.checked);\n        this.innerChecked = e.target.checked;\n      } else {\n        this.$emit('change', e.target.value);\n      }\n    },\n    onInput: function onInput(e) {\n      if (this.type !== \"checkbox\") {\n        this.$emit('input', e.target.value);\n        this.innerValue = e.target.value;\n      }\n    }\n  },\n  mixins: [waves],\n  watch: {\n    value: function value(val) {\n      this.$refs.input.value = val;\n      this.innerValue = val;\n      this.$emit('change', this.innerValue);\n    }\n  }\n};\nexport default Input;\nexport { Input as mdbInput };",{"version":3,"sources":["Input.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <component\r\n    v-if=\"noWrapper\"\r\n    ref=\"input\"\r\n    :is=\"whatTagIsThis\"\r\n    :id=\"id\"\r\n    :class=\"inputClasses\"\r\n    :type=\"type\"\r\n    :placeholder=\"placeholder\"\r\n    :disabled=\"disabled\"\r\n    :name=\"name\"\r\n    :required=\"required\"\r\n    :checked=\"innerChecked\"\r\n    :value=\"innerValue\"\r\n    :rows=\"rows\"\r\n    :maxlength=\"maxlength\"\r\n    :aria-label=\"label || ariaLabel || placeholder\"\r\n    :aria-describedby=\"ariaDescribedBy\"\r\n    :aria-labelledby=\"ariaLabelledBy\"\r\n    @focus=\"focus\"\r\n    @blur=\"blur\"\r\n    @click=\"wave\"\r\n    @change=\"onChange\"\r\n    @input=\"onInput\"\r\n  >{{whatTagIsThis==='textarea' && value}}</component>\r\n  <div :class=\"wrapperClasses\" v-else>\r\n    <i v-if=\"icon\" :class=\"iconClasses\"/>\r\n    <div class=\"input-group-prepend\" v-if=\"$slots.prepend\" :id=\"prependSlotID\">\r\n      <slot name=\"prepend\"></slot>\r\n    </div>\r\n    <component\r\n      ref=\"input\"\r\n      :is=\"whatTagIsThis\"\r\n      :id=\"id\"\r\n      :class=\"inputClasses\"\r\n      :type=\"type\"\r\n      :placeholder=\"placeholder\"\r\n      :disabled=\"disabled\"\r\n      :name=\"name\"\r\n      :required=\"required\"\r\n      :checked=\"innerChecked\"\r\n      :value=\"innerValue\"\r\n      :rows=\"rows\"\r\n      :maxlength=\"maxlength\"\r\n      :aria-label=\"label || ariaLabel || placeholder\"\r\n      :aria-describedby=\"ariaDescribedBy\"\r\n      :aria-labelledby=\"ariaLabelledBy\"\r\n      @focus=\"focus\"\r\n      @blur=\"blur\"\r\n      @click=\"wave\"\r\n      @change=\"onChange\"\r\n      @input=\"onInput\"\r\n    >{{whatTagIsThis==='textarea' && value}}</component>\r\n    <label v-if=\"label\" :class=\"labelClasses\" @click=\"focus\" ref=\"label\" :for=\"id\">{{label}}</label>\r\n    <label v-if=\"isThisCheckboxLabeless\" :class=\"labelClasses\" @click=\"focus\" ref=\"label\" :for=\"id\"/>\r\n    <slot></slot>\r\n    <div class=\"input-group-append\" v-if=\"$slots.append\" :id=\"appendSlotID\">\r\n      <slot name=\"append\"></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport classNames from 'classnames';\r\nimport waves from '../mixins/waves';\r\n\r\nconst Input = {\r\n  props: {\r\n    basic: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    name: {\r\n      type: String\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    tag: {\r\n      type: String,\r\n      default: \"input\"\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"text\"\r\n    },\r\n    id: {\r\n      type: String\r\n    },\r\n    label: {\r\n      type: String\r\n    },\r\n    filled: {\r\n      type: Boolean\r\n    },\r\n    icon: {\r\n      type: String,\r\n    },\r\n    placeholder: {\r\n      type: String\r\n    },\r\n    size: {\r\n      type: String\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    checked: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    navInput: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    gap: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    waves: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    wavesFixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    value: {\r\n      type: [String, Number],\r\n      default: ''\r\n    },\r\n    labelColor: {\r\n      type: String\r\n    },\r\n    iconClass: {\r\n      type: String\r\n    },\r\n    inline: {\r\n      type: Boolean\r\n    },\r\n    successMsg: {\r\n      type: String\r\n    },\r\n    errorMsg: {\r\n      type: String\r\n    },\r\n    valid: {\r\n      type: Boolean\r\n    },\r\n    invalid: {\r\n      type: Boolean\r\n    },\r\n    active: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    labelClass: {\r\n      type: [Array, String]\r\n    },\r\n    far: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    regular: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fal: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    light: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fab: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    brands: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    rows: {\r\n      type: Number\r\n    },\r\n    wrapperClass: {\r\n      type: [String, Array]\r\n    },\r\n    noWrapper: {\r\n      type: Boolean,\r\n      value: false\r\n    },\r\n    ariaLabel: {\r\n      type: String\r\n    },\r\n    ariaDescribedBy: {\r\n      type: String\r\n    },\r\n    ariaLabelledBy: {\r\n      type: String\r\n    },\r\n    prependSlotID: {\r\n      type: String\r\n    },\r\n    appendSlotID: {\r\n      type: String\r\n    },\r\n    inputClass: {\r\n      type: String\r\n    },\r\n    maxlength: {\r\n      type: [String, Number]\r\n    },\r\n    outline: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      innerValue: this.value,\r\n      innerRadio: '',\r\n      isTouched: this.active,\r\n      innerChecked: this.checked\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.type === \"checkbox\") {\r\n      this.$emit('getDefaultValue', this.innerChecked);\r\n    } else if (this.type === \"radio\") {\r\n      if (this.checked) {\r\n        this.$emit('getDefaultValue', this.innerValue);\r\n      }\r\n    } else {\r\n      this.$emit('getDefaultValue', this.innerValue);\r\n    }\r\n  },\r\n  computed: {\r\n    inputClasses() {\r\n      return classNames(\r\n        'form-control',\r\n        {\r\n          'validate valid': this.valid,\r\n          'validate invalid': this.invalid,\r\n          'filled-in': this.filled,\r\n          'with-gap': this.gap\r\n        },\r\n        this.type === 'checkbox' ? this.gap ? false : 'form-check-input' : false,\r\n        this.type === 'radio' ? 'form-check-input' : false,\r\n        this.type === 'textarea' && !this.basic ? 'md-textarea' : false,\r\n        this.inputClass && this.inputClass\r\n      );\r\n    },\r\n    wrapperClasses() {\r\n      return classNames(\r\n        (this.type === 'checkbox' || this.type === 'radio') && this.inline ?\r\n          'form-check' : (this.type === 'checkbox' || this.type === 'radio') ? 'form-check my-3' : false,\r\n        this.basic ? false : 'md-form',\r\n        this.outline && 'md-outline',\r\n        this.waves && 'ripple-parent',\r\n        this.doesItGetTheGroupClass && this.size ? `input-group input-group-${this.size}` :\r\n          this.doesItGetTheGroupClass && !this.size ? 'input-group' :\r\n            !this.doesItGetTheGroupClass && this.size ? `form-${this.size}` : false,\r\n        this.wrapperClass\r\n      );\r\n    },\r\n    iconClasses(){\r\n      return classNames(\r\n        this.far || this.regular ? 'far' :\r\n          this.fal || this.light ? 'fal' :\r\n            this.fab || this.brands ? 'fab' : 'fas',\r\n        'prefix fa-' + this.icon,\r\n        this.isTouched && 'active',\r\n        this.iconClass\r\n      );\r\n    },\r\n    labelClasses() {\r\n      return classNames(\r\n        {\r\n          'active': (this.placeholder || this.isTouched || this.innerValue !=='') && this.type!=='checkbox',\r\n          'disabled': this.disabled,\r\n          'form-check-label': (this.type === 'checkbox' || this.type === 'radio'),\r\n          'mr-5': !this.isThisCheckboxLabeless\r\n        },\r\n        this.labelColor && 'text-' + this.labelColor,\r\n        this.labelClass\r\n      );\r\n    },\r\n    // tagname helper\r\n    whatTagIsThis() {\r\n      if (this.type==='textarea') {\r\n        return 'textarea';\r\n      }\r\n      return this.tag;\r\n    },\r\n    // classname helper\r\n    doesItGetTheGroupClass() {\r\n      return (this.$slots.prepend || this.$slots.append) || (this.basic && this.type==='textarea');\r\n    },\r\n    // checkbox with no label (say, has to fit vertically & horizontally) helper\r\n    isThisCheckboxLabeless() {\r\n      return this.type==='checkbox' && typeof this.label===\"undefined\";\r\n    }\r\n  },\r\n  methods: {\r\n    focus(e) {\r\n      this.isTouched = true;\r\n      if (!this.disabled) {\r\n        this.$refs.input.focus();\r\n      }\r\n      // styles for navbar input\r\n      if (this.navInput) {\r\n        this.$el.firstElementChild.style.borderColor = \"transparent\";\r\n        this.$el.firstElementChild.style.boxShadow = \"none\";\r\n      }\r\n    },\r\n    blur(e) {\r\n      this.isTouched = false;\r\n      // styles for navbar input\r\n      if (this.navInput) {\r\n        this.$el.firstElementChild.style.borderColor = \"#fff\";\r\n      }\r\n    },\r\n    onChange(e) {\r\n      if (this.type === \"checkbox\") {\r\n        this.$emit('change', e.target.checked);\r\n        this.innerChecked = e.target.checked;\r\n      }\r\n      else {\r\n        this.$emit('change', e.target.value);\r\n      }\r\n    },\r\n    onInput(e) {\r\n      if (this.type !== \"checkbox\") {\r\n        this.$emit('input', e.target.value);\r\n        this.innerValue = e.target.value;\r\n      }\r\n    }\r\n  },\r\n  mixins: [waves],\r\n  watch: {\r\n    value(val) {\r\n      this.$refs.input.value = val;\r\n      this.innerValue = val;\r\n      this.$emit('change', this.innerValue);\r\n    }\r\n  }\r\n};\r\n\r\nexport default Input;\r\nexport { Input as mdbInput };\r\n</script>\r\n\r\n<style scoped>\r\n.navbar .md-form {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n}\r\n\r\n.form-dark input[type=\"checkbox\"]:checked + label:before {\r\n  top: -4px;\r\n  left: -3px;\r\n  width: 12px;\r\n  height: 22px;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  border-color: transparent #00c851 #00c851 transparent;\r\n  -webkit-transform: rotate(40deg);\r\n  -ms-transform: rotate(40deg);\r\n  transform: rotate(40deg);\r\n  -webkit-backface-visibility: hidden;\r\n  -webkit-transform-origin: 100% 100%;\r\n  -ms-transform-origin: 100% 100%;\r\n  transform-origin: 100% 100%; }\r\n\r\n.form-dark .font-small {\r\n  font-size: 0.8rem; }\r\n\r\n.form-dark input[type=email]:focus:not([readonly]) + label {\r\n  color: #fff; }\r\n\r\n.form-dark input[type=\"checkbox\"] + label:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 17px;\r\n  height: 17px;\r\n  z-index: 0;\r\n  border: 1.5px solid #fff;\r\n  border-radius: 1px;\r\n  margin-top: 2px;\r\n  -webkit-transition: 0.2s;\r\n  transition: 0.2s; }\r\n\r\n.form-dark input[type=\"checkbox\"]:checked + label:before {\r\n  top: -4px;\r\n  left: -3px;\r\n  width: 12px;\r\n  height: 22px;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  border-color: transparent #00c851 #00c851 transparent;\r\n  -webkit-transform: rotate(40deg);\r\n  -ms-transform: rotate(40deg);\r\n  transform: rotate(40deg);\r\n  -webkit-backface-visibility: hidden;\r\n  -webkit-transform-origin: 100% 100%;\r\n  -ms-transform-origin: 100% 100%;\r\n  transform-origin: 100% 100%; }\r\n\r\n.form-dark input[type=password]:focus:not([readonly]) {\r\n  border-bottom: 1px solid #00C851;\r\n  -webkit-box-shadow: 0 1px 0 0 #00C851;\r\n  box-shadow: 0 1px 0 0 #00C851; }\r\n\r\n\r\n.form-dark input[type=email]:focus:not([readonly]) {\r\n  border-bottom: 1px solid #00C851;\r\n  -webkit-box-shadow: 0 1px 0 0 #00C851;\r\n  box-shadow: 0 1px 0 0 #00C851; }\r\n\r\n\r\n.form-dark [type=\"checkbox\"] + label:before {\r\n  top: 2px;\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n\r\n.md-form textarea~label.active{\r\n\tcolor: inherit;\r\n}\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"node_modules/mdbvue/src/components"}]}